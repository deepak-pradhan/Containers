## file : docker-compose.yml
# Ref: https://github.com/n8n-io/n8n-hosting/blob/main/docker-compose/withPostgresAndWorker/README.md
# Modified by dp 2024-01-16
version: '3.8'

volumes:
  storage_db:
    driver: local
    driver_opts:
      type: none
      device: /home/dp/Desktop/Github/Containers/my_n8n/volumes/storage_db
      o: bind
  storage_n8n:
    driver: local
    driver_opts:
      type: none
      device: /home/dp/Desktop/Github/Containers/my_n8n/volumes/storage_n8n
      o: bind
  storage_redis:
    driver: local
    driver_opts:
      type: none
      device: /home/dp/Desktop/Github/Containers/my_n8n/volumes/storage_redis
      o: bind

x-shared: &shared
  restart: always
  image: docker.n8n.io/n8nio/n8n
  container_name: my_n8n
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_ENCRYPTION_KEY=${ENCRYPTION_KEY}
  volumes:
    - storage_n8n:/home/node/.n8n

services:
  postgres:
    image: postgres:16
    container_name: my_n8n-postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_NON_ROOT_USER: ${POSTGRES_NON_ROOT_USER}
      POSTGRES_NON_ROOT_PASSWORD: ${POSTGRES_NON_ROOT_PASSWORD}
    volumes:
      - storage_db:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    ports:
      - "5433:5432"  # Map host port 5433 to container port 5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  redis:
    image: redis:6-alpine
    container_name: my_n8n-redis
    restart: always
    volumes:
      - storage_redis:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n:
    <<: *shared
    container_name: my_n8n-app
    ports:
      - "5678:5678"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  n8n-worker:
    <<: *shared
    container_name: my_n8n-worker
    command: worker
    depends_on:
      - n8n

